# -*- coding: utf-8 -*-
# vi: set ft=python :

import os
from cdiscountapi.cdiscountapi import Connection
from functools import lru_cache
from collections import defaultdict
from pathlib import Path
import konch
import yaml
from lxml import etree


@lru_cache(maxsize=128)
def get_tree(api):
    tree = api.products.get_allowed_category_tree()
    return tree['CategoryTree']['ChildrenCategoryList']['CategoryTree']


def walk_tree(tree):
    graph = {}
    for branch in tree:
        name = branch['Name']
        if branch.get('ChildrenCategoryList', {}) is not None:
            graph[name] = walk_tree(branch['ChildrenCategoryList']['CategoryTree'])
        else:
            graph[name] = branch['Code']
    return graph


def analyze_preprod_choice(value):
    """
    value must be '0' (False) or '1' (True)
    """
    if value not in ('0', '1'):
        raise ValueError('value must be "0" (False) or "1" (True)')
    return bool(int(value))


def load_cassette(cassette_name):
    """
    Load the cassette saved in yaml by vcrpy

    :param cassette_name: The name of the cassette
    :type cassette_name: str
    :rtype: dict
    :return: the data contained in the cassette
    """
    fname = Path("cdiscountapi/tests/cassettes").joinpath(cassette_name)
    if not fname.exists():
        raise Exception(f'{fname} does not exist.')
    return yaml.load(fname.read_text())


def create_request(api, operation, **kwargs):
    """
    Example
    >>> element = create_request(api, 'GetProductList',
                                 productFilter={'CategoryCode': '42'})
    """
    return api.client.create_message(api.client.service, operation,
                                     headerMessage=api.header, **kwargs)


def show_request(api, operation, **kwargs):
    request = create_request(api, operation, **kwargs)
    print(etree.tostring(request, pretty_print=True).decode('utf8'))


cdiscount_api_preprod = os.getenv('CDISCOUNT_API_PREPROD')
preprod = analyze_preprod_choice(cdiscount_api_preprod) if\
    cdiscount_api_preprod else False

if preprod:
    banner = '==Preprod environment for Cdiscount=='
else:
    banner = '**Production environment for Cdiscount**'

# Available options:
#   'context', 'banner', 'shell', 'prompt', 'output',
#   'context_format', 'ipy_extensions', 'ipy_autoreload',
#   'ipy_colors', 'ipy_highlighting_style'

konch.config({
    'banner': banner,
    'context': {
        'api': Connection(os.getenv('CDISCOUNT_API_LOGIN'),
                          os.getenv('CDISCOUNT_API_PASSWORD'),
                          preprod=preprod),
        'get_tree': get_tree,
        'load_cassette': load_cassette,
        'create_request': create_request,
        'show_request': show_request,
    },
    "shell": "ipython",
    "ipy_autoreload": True,
})


def setup():
    pass


def teardown():
    pass
